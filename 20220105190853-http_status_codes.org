:PROPERTIES:
:ID:       0c144ad5-a17c-4f62-b8d5-06ca5720fe2d
:END:
#+title: HTTP Status Codes

* What is a HTTP Status Code?
** Item
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1641646263060
:END:
*** Front
What is a HTTP Status Code?
*** Back
Status codes are issued by a server in response to a client's request made to the server. It includes codes from IETF Request for Comments (RFCs), other specifications, and some additional codes used in some common applications of the HTTP(Hyper Text Transfer Protocol).
* Who maintains the official registry of HTTP status codes?
** Item
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1642504606162
:END:
*** Front
Which organistation maintains the offical registry of HTTP status codes?

*** Back
The Internet Assigned Numbers Registry (IANA) maintains the official registry of HTTP status codes


* How are HTTP Status Codes classified?
** Item
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1642506783139
:END:
*** Front
How are HTTP Status Codes classified?

*** Back
The first digit of the three digit status code specifies one of five standard classes of responses.
e.g. 504, 404, 200 etc.

The remaining two digits do not have any classifying or categorization role.
* What are 1xx class responses?
**  Item
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1642506783238
:END:
*** Front
What are 1xx class responses?
*** Back
1xx class responses are informational. It is issued on a provisional basis while request processing continues. It alerts the client to wait for a final response. The message consists only of the status line and optional header fields, and is terminated by an empty line. As the HTTP/1.0 standard did not define any 1xx status codes, servers must not send a 1xx response to an HTTP/1.0 compliant client except under experimental conditions
* What are 2xx class responses?
**  Item
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1642506783339
:END:
*** Front
What are 2xx class responses?
*** Back
2xx class responses denote a successful request. The request was successfully received, understood and accepted.

* What are 3xx class responses?
**  Item
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1642506783436
:END:
*** Front
What are 3xx class responses?
*** Back
3xx class responses signifies that the client must take further action to complete the request. Many of the status codes are used in URL Redirection. A user agent may carry out the addtional action with no user interaction only if the method used in a second request is GET or HEAD. A user agent may automatically redirect a request. A user agent should detect and intervene to prevent cyclic redirects.

* What are 4xx class responses?
**  Item
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1642506783541
:END:
*** Front
What are 4xx class responses?
*** Back
4xx class responses are intended for situations in which the error seems to have been caused by the client. Except when responding to HEAD requests, the server should include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method. User agents should display any included entity to the user.

* What are 5xx class responses?
**  Item
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1642506783642
:END:
*** Front
What are 5xx class responses?
*** Back
5xx class responses indicate cases in which the server is aware that it has encountered an error or is otherwise incapable or performing the request. Except when responding to HEAD requests, the server should include an entity containing an explanation of the error situation, and indicate whether it is a temporary or permanent failure. Likewise, user agents should display any included entity to the user. This class of response are applicable to any request method.


* 1xx informational responses
** 100 continue
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111254333
:END:
*** Front
What does HTTP status code 100 mean?
*** Back
100 continue

The server has received the request header and the client should proceed to send the request body (in the case of a request for which a body needs to be sent; for example, a POST request). Sending a large request body to the server after a request has been rejected for inappropriate headers would be inefficient. To have a server check the request's headers, a client must send ~Expect: 100-continue~ status code in reponse before sending the body. If the client receives an error code such as a 403 (Forbidden) or a 405 (Method Not Allowed) then it should not send the request's body. The response ~417 Expectation Failed~ indicates that the request should be repeated without the ~Expect~ header as it indicates that the server does not support expectations (this is the case, for example. of HTTP/1.0 servers)

** 101 Switching Protocols
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111254446
:END:
*** Front
What does HTTP status code 101 mean?
*** Back
101 Switching Protocols

The requestor has asked the server to switch protocols and the server has agreed to do so.

** 102 Processing (WebDAV; RFC 2518)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111254546
:END:
*** Front
What does HTTP status code 102 mean?
*** Back
102 Processing (WebDAV; RFC 2518)

A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request. This code indicates that the server has recieved and is processing the request, but no response is available yet. This prevents the client from timing out and assuming the request was lost.


** 103 Early Hints (RFC 8297)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111254643
:END:
*** Front
What does HTTP status code 103 mean?
*** Back
103 Early Hints (RFC 8297)

Used to return some reponse hearders before final HTTP message.

* 2xx success
** 200 Ok
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111254744
:END:
*** Front
What does HTTP status code 200 mean?
*** Back
200 Ok

Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request, the response will contain an entity describing or containing the result of the action.

** 201 Created
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111254843
:END:
*** Front
What does HTTP status code 201 mean?
*** Back
201 Created

The request has been fulfilled, resulting in the creation of a new resource.

** 202 Accepted
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111254943
:END:
*** Front
What does HTTP status code 202 mean?
*** Back
202 Accepted

The request has been accepted for processing, but the processing has not been completed. The request might or might not be acted upon, and be disallowed when processing occurs.

** 203 Non-Authoritative Information (since HTTP/1.1)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111255045
:END:
*** Front
What does HTTP status code 203 mean?
*** Back
203 Non-Authoritative Information (since HTTP/1.1)

The server is a transforming proxy (e.g. a Web Accelerator) that recieved a 200 ok from it's origin, but is returning a modified version of the origin's response.

** 204 No Content
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111255143
:END:
*** Front
What does HTTP status code 204 mean?
*** Back
204 No Content

The server successfully processed the request, and is not returning any content.

** 205 Reset Content
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111255243
:END:
*** Front
What does HTTP status code 205 mean?
*** Back
205 Reset Content

The server successfully processed the request, asks that the requester reset its document view, and is not returning any content.

** 206 Partial Content (RFC 7233)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111255346
:END:
*** Front
What does HTTP status code 206 mean?
*** Back
206 Partial Content (RFC 7223)

The server is delivering only part of the resource (byte serving) due to a range header sent by the client. The range header is used by HTTP clients to enable resuming of interrupted downloads, or split a download into multiple simultaneous streams.

** 207 Multi-Status (WebDAV; RFC 4918)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111255444
:END:
*** Front
What does HTTP status code 207 mean?
*** Back
207 Multi-Status (WebDAV; RFC 4918)

The message body that follows is by default an XML message and can contain a number of separate response codes, depending on how many sub-requests were made.

** 208 Already Reported (WebDAV; RFC 5842)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111255546
:END:
*** Front
What does HTTP status code 208 mean?
*** Back
208 Already Reported (WebDAV; RFC 5842)

The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response, and are not being included again.

** 226 IM Used (RFC 3229)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643111255644
:END:
*** Front
What does HTTP status code 226 mean?
*** Back
226 IM Used (RFC 3229)

The server has fulfilled a request for the resource, and the response is a representation of the result of one or more instance-manipulations applied to the current instance.

* 3xx redirect
** 300 Multiple Choices
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643739552355
:END:
*** Front
What does HTTP status code 300 mean?
*** Back
300 Mutliple Choices

Indicates multiple options for the resource from which the client may choose (via agent-drive content negotiation). For example, this code could be used top present multiple video format options, to list files with different filename extensions, or to suggest word-sense disambiguation.

** 301 Moved Permanently
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643739552462
:END:
*** Front
What does HTTP status code 301 mean?
*** Back
301 Moved Permanently

This and all future requests should be directed to the given URI

** 302 Found (Previously "Moved Temporarily")
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643739552557
:END:
*** Front
What does HTTP status code 302 mean?
*** Back
302 Found (Previously "Moved Temporarily")

Tells the client to look at (browse to) another URL. The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect with the same method (the original describing phrase was "Moved Permanently"), but popular browsers implemented 302 redirects by changing the method to GET. Therefore, HTTP/1.1 added status codes 303 and 307 to distinguish between the two behaviors.

** 303 See Other (since HTTP/1.1)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643740281534
:END:
*** Front
What does HTTP status code 303 mean?
*** Back
303 See Other (since HTTP/1.1)

The response to the request can be found under another URI using the GET method. When recieved in response to a POST (or PUT/DELETE), the client should presume that the server has received the data and should issue a new GET request to the given URI.

** 304 Not Modified (RFC 7232)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643739552809
:END:
*** Front
What does HTTP status code 304 mean?
*** Back
304 Not Modified (RFC 7232)

Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match. In such a case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.


** 305 Use Proxy (since HTTP/1.1)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643739552911
:END:
*** Front
What does HTTP status code 305 mean?
*** Back
305 Use Proxy (since HTTP/1.1)

The requested resource is available only through a proxy, the address for which is provided in the response. For security reasons, many HTTP clients (such as Mozilla Firefox and Internet Explorer) do not obey this status code.

** 306 Switch Proxy
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643739553011
:END:
*** Front
What does HTTP status code 306 mean?
*** Back
306 Switch Proxy

No longer used. Originally meant "Subsequent requests should use the specified proxy."

** 307 Temporary Redirect (since HTTP/1.1)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643739553110
:END:
*** Front
What does HTTP status code 307 mean?
*** Back
307 Temporary Redirect (since HTTP/1.1)

In this case, the request should be repeated with another URI;however, future requests should still use the original URI. In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissueing the original request. For example, a POST request should be repeated using another POST request.


** 308 Permanent Redirect (RFC 7538)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643739553211
:END:
*** Front
What does HTTP status code 308 mean?
*** Back
308 Permanent Redirect (RFC 7538)

This and all future requests should be directed to the given URI. 308 parallels the behaviour of 301, but does not allow the HTTP method to change. So, for example, submitting a form to a permanently redirected resource may continue smoothly.

* 4xx client errors

** 400 Bad Request
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643741553031
:END:
*** Front
What does HTTP status code 400 mean?
*** Back
400 Bad Request

The server cannot or will not process the request due to an apparent client error (e.g. malformed request syntax, size too large, invalid request message framing, or deceptive request routing).

** 401 Unauthorized (RFC 7235)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643741553129
:END:
*** Front
What does HTTP status code 401 mean?
*** Back
401 Unauthorized

Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet been provided. The response mustl include a WWW-Authenticate header field containing a challenge applicable to the request resource. See Basic access authentication and Digest access authentication. 401 semantically means "unauthorised", the user does not have valid authentication credentials for the target resource.
Note: Some sites incorrectly issue HTTP 401 when an IP address is banned from the website (usually the website domain) and that specific address is refused permission to access a website.

** 402 Payment Required
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643741553231
:END:
*** Front
What does HTTP status code 402 mean?
*** Back
402 Payment Required

Reserved for future use. The original intention was that this code might be used as part of some form of digital cash or micropayment scheme, as proposed, for example, by GNU Taler, but that has not yet happened, and this code is not widely used. Google Developers API uses this status if a particular developer has exceeded the daily limit of requests. Sipgate uses this code if an account does not have sufficient credit to start a call. Shopify uses this code when the store has not paid their fees and is temporarily disabled. Stripe uses this code for failed payments where parameters were correct, for example blocked fraudulent payments.

** 403 Forbidden
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744989255
:END:
*** Front
What does HTTP status code 403 mean?
*** Back
403 Forbidden

The request contained valid data and was understood by the server, but the server is refusing action. This may be due to the user not having the necessary permissions for a resource or needing an account of some sort, or attempting a prohibited action (e.g. creating a duplicate record where only one is allowed). This code is also typically used if the request provided authentication by answering the WWW-Authenticate header field challenge, but the server did not accept that authentication. The request should not be repeated.

** 404 Not Found
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744989357
:END:
*** Front
What does HTTP status code 404 mean?
*** Back
404 Not Found

The request resource could not be found but may be available in the future. Subsequent requests by the client are permissable.

** 405 Method Not Allowed
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744989456
:END:
*** Front
What does HTTP status code 405 mean?
*** Back
405 Method Not Allowed

A request method is not supported or the requested resource; for example, a GET request on a form the requires data to be presented via POST, or a PUT request on a read-only resource.

** 406 Not Acceptable
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744989556
:END:
*** Front
What does HTTP status code 406 mean?
*** Back
406 Not Acceptable

The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request. See Content Negotiation.

** 407 Proxy Authentication Required (RFC 7235)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744989658
:END:
*** Front
What does HTTP status code 407 mean?
*** Back
407 Proxy Authentication Required (RFC 7235)

The client must authenticate itself with the proxy.

** 408 Request Timeout
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744989754
:END:
*** Front
What does HTTP status code 408 mean?
*** Back
408 Request Timeout

The server timed out waiting for the request. According to HTTP specifications: "The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time."

** 409 Conflict
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744989856
:END:
*** Front
What does HTTP status code 409 mean?
*** Back
409 Conflict

Indicates that the request could not be processed because of a conflict in the current state of the resource, such as an editor conflict between multiple simultaneous updates.

** 410 Gone
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744989958
:END:
*** Front
What does HTTP status code 410 mean?
*** Back
410 Gone

Indicates that the resource requested is no longer available and will not be available again. This should be used when a resource has been intentionally removed and the resource should be purged. Upon receiving a 410 status code, the client should not request the resource in the future. Clients such as search engines should remove the resource from their indices. Most use cases do not require clients and search engines to purge the resource, and a "404 Not Fount" may be used instead.

** 411 Length Required
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1643744990057
:END:
*** Front
What does HTTP status code 411 mean?
*** Back
411 Length Required

The request did not specify the length of its content, which is required by the requested resource.

** 412 Precondition Failed (RFC 7232)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479322448
:END:
*** Front
What does HTTP status code 412 mean?
*** Back
412 Precondition Failed (RFC 7232)

The server does not meet one of the preconditions that the requester put on the request header fields.

** 413 Payload Too Large (RFC 7231)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479322543
:END:
*** Front
What does HTTP status code 413 mean?
*** Back
413 Payload Too Large

The request is larger than the server is willing or able to process. Previously called "Request Entity Too Large"

** 414 URI Too Large (RFC 7231)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479322643
:END:
*** Front
What does HTTP status code 414 mean?
*** Back
414 URI Too Large (RFC 7231)

The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request, in which case it should be converted to a POST request. Called "Request URI Too Long" previously.

** 415 Unsupported Media Type (RFC 7231)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479322744
:END:
*** Front
What does HTTP status code 415 mean?
*** Back
415 Unsupported Media Type (RFC 7231)

The requested entity has a media type which the server or resource does not support. For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.


** 416 Range not Satisfiable (RFC 7233)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479322841
:END:
*** Front
What does HTTP status code 416 mean?
*** Back
416 Range not Satisfiable (RFC 7233)

The client has asked for a portion of the file (byte serving), but the server cannot supply that portion. For example, if the client asked for a part of the file that lies beyond the end of the file. Called "Requested Range Not Satisfiable" previously.

** 417 Expectation Failed
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479322940
:END:
*** Front
What does HTTP status code 417 mean?
*** Back
417 Expectation Failed

The server cannot meet the requirements of the Expect request-header field.

** 418 I'm a teapot (RFC 2324, RFC 7168)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479323039
:END:
*** Front
What does HTTP status code 418 mean?
*** Back
418 I'm a teapot (RFC 2324, RFC 7168)

This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol, and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by requested to brew coffee. This HTTP status is used an Easter egg in some websites, such as Google.com's I'm a teapot easter egg.

** 421 Misdirected Request (RFC 7540)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479323140
:END:
*** Front
What does HTTP status code 421 mean?
*** Back
421 Misdirected Request (RFC 7540)

The request was directed at a server that is not able to produce a response (for example because of connection reuse).

** 422 Unprocessable Entity (WebDAV; RFC 4918)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479323240
:END:
*** Front
What does HTTP status code 422 mean?
*** Back
422 Unprocessable Entity (WebDAV; RFC 4918)

The request was well-formed but was unable to be followed due to semantic errors.

** 423 Locked (WebDAV; RFC 4918)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479323344
:END:
*** Front
What does HTTP status code 423 mean?
*** Back
423 Locked (WebDAV; RFC 4918)

The resource that is being accessed is locked.

** 424 Failed Dependency (WebDAV; RFC 4918)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479323440
:END:
*** Front
What does HTTP status code 424 mean?
*** Back
424 Failed Dependency (WebDAV; RFC 4918)

The request failed becuase it depended on another request and that request failed (e.g., a PROPPATCH)

** 425 Too Early (RFC 8470)
:PROPERTIES:
:ANKI_DECK: Web Dev
:ANKI_NOTE_TYPE: Basic
:ANKI_TAGS: web development http
:ANKI_NOTE_ID: 1645479323544
:END:
*** Front
What does HTTP status code 425 mean?
*** Back
425 Too Early (RFC 8470)

Indicated that the server is unwilling to risk processing a request that might be replayed.
** [[id:08d34c11-7c32-42be-84c8-c7a826445b7b][426 Upgrade Required]]
** [[id:39500567-fc80-4854-8893-51df502ddc2f][428 Precondition Required (RFC 6585)]]
** [[id:104120c4-8b4f-40ab-909d-2d226585117a][429 Too Many Requests (RFC 6585)]]
** [[id:89ae4e51-9a1d-4a6f-a61d-0ff7e304cdef][431 Request Header Fields Too Large (RFC 6585)]]
** [[id:1451b54f-6dc9-4ebb-8ca9-16ea004a6cf1][451 Unavailable For Legal Reasons (RFC 7725)]]

* 5xx Server Errors
** [[id:d0febcbc-d326-476b-a1c9-0ad25357d248][500 Internal Server Error]]
** [[id:b59873a5-4caa-45e4-930c-08e5f095931d][501 Not Implemented]]
** [[id:051fed63-472c-4ce1-bb0b-26e04c992468][502 Bad Gatway]]
** [[id:703e4c22-0e32-426d-af35-74b1a02a73fe][503 Service Unavailable]]
** [[id:4a62aee0-60a7-4b42-bbe5-fc87985e78b7][504 Gateway Timeout]]
** [[id:5c2cf9be-778a-4486-9087-a10d84b59e54][506 Variant Also Negotiates (RFC 2295)]]
** [[id:4f520711-e1bf-433d-bded-c25e6d356a8b][507 Insufficient Storage]]
** [[id:86011418-27af-44dc-a2b0-96a75fab3d54][508 Loop Detected]]
** [[id:ffd14a40-650f-4004-9ce3-0a20d08a2702][510 Not Extended]]
** [[id:ccfa34b3-860e-4e7e-afbf-e2d5b9361521][511 Network Authentication Required]]
